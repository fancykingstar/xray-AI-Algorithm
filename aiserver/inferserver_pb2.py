# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: inferserver.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='inferserver.proto',
  package='inferserver',
  syntax='proto3',
  serialized_pb=_b('\n\x11inferserver.proto\x12\x0binferserver\"\x1d\n\ndcmRequest\x12\x0f\n\x07\x64\x63mname\x18\x01 \x01(\t\"U\n\rrotationReply\x12+\n\x06result\x18\x01 \x01(\x0e\x32\x1b.inferserver.RotationResult\x12\x17\n\x0f\x63onfidenceScore\x18\x02 \x01(\x02\"]\n\x11\x63hestFrontalReply\x12/\n\x06result\x18\x01 \x01(\x0e\x32\x1f.inferserver.ChestFrontalResult\x12\x17\n\x0f\x63onfidenceScore\x18\x02 \x01(\x02\"W\n\x0elungFieldReply\x12,\n\x06result\x18\x01 \x01(\x0e\x32\x1c.inferserver.LungFieldResult\x12\x17\n\x0f\x63onfidenceScore\x18\x02 \x01(\x02\"i\n\x08ptxReply\x12/\n\x06result\x18\x01 \x01(\x0e\x32\x1f.inferserver.PneumothoraxResult\x12\x17\n\x0f\x63onfidenceScore\x18\x02 \x01(\x02\x12\x13\n\x0bheatmapPath\x18\x03 \x01(\t\"h\n\x0c\x66reeAirReply\x12*\n\x06result\x18\x01 \x01(\x0e\x32\x1a.inferserver.FreeAirResult\x12\x17\n\x0f\x63onfidenceScore\x18\x02 \x01(\x02\x12\x13\n\x0bheatmapPath\x18\x03 \x01(\t\"f\n\x0b\x63\x61rinaReply\x12)\n\x06result\x18\x01 \x01(\x0e\x32\x19.inferserver.CarinaResult\x12\x17\n\x0f\x63onfidenceScore\x18\x02 \x01(\x02\x12\x13\n\x0bheatmapPath\x18\x03 \x01(\t\"f\n\x0b\x65ttubeReply\x12)\n\x06result\x18\x01 \x01(\x0e\x32\x19.inferserver.ETTubeResult\x12\x17\n\x0f\x63onfidenceScore\x18\x02 \x01(\x02\x12\x13\n\x0bheatmapPath\x18\x03 \x01(\t\"l\n\x0e\x65ttubeTipReply\x12,\n\x06result\x18\x01 \x01(\x0e\x32\x1c.inferserver.ETTubeTipResult\x12\x17\n\x0f\x63onfidenceScore\x18\x02 \x01(\x02\x12\x13\n\x0bheatmapPath\x18\x03 \x01(\t*S\n\x0eRotationResult\x12\x0b\n\x07UPRIGHT\x10\x00\x12\x11\n\rCLOCKWISE_270\x10\x01\x12\x0f\n\x0bUPSIDE_DOWN\x10\x02\x12\x10\n\x0c\x43LOCKWISE_90\x10\x03*2\n\x12\x43hestFrontalResult\x12\x0b\n\x07\x46RONTAL\x10\x00\x12\x0f\n\x0bNON_FRONTAL\x10\x01*>\n\x0fLungFieldResult\x12\x12\n\x0eLUNG_FIELDS_OK\x10\x00\x12\x17\n\x13LUNG_FIELDS_CLIPPED\x10\x01*G\n\x12PneumothoraxResult\x12\x18\n\x14PNEUMOTHORAX_PRESENT\x10\x00\x12\x17\n\x13PNEUMOTHORAX_ABSENT\x10\x01*8\n\rFreeAirResult\x12\x13\n\x0f\x46REEAIR_PRESENT\x10\x00\x12\x12\n\x0e\x46REEAIR_ABSENT\x10\x01*5\n\x0c\x43\x61rinaResult\x12\x12\n\x0e\x43\x41RINA_PRESENT\x10\x00\x12\x11\n\rCARINA_ABSENT\x10\x01*5\n\x0c\x45TTubeResult\x12\x12\n\x0e\x45TTUBE_PRESENT\x10\x00\x12\x11\n\rETTUBE_ABSENT\x10\x01*@\n\x0f\x45TTubeTipResult\x12\x16\n\x12\x45TTUBE_TIP_PRESENT\x10\x00\x12\x15\n\x11\x45TTUBE_TIP_ABSENT\x10\x01\x32Z\n\x11InferChestFrontal\x12\x45\n\x08inferDCM\x12\x17.inferserver.dcmRequest\x1a\x1e.inferserver.chestFrontalReply\"\x00\x32R\n\rInferRotation\x12\x41\n\x08inferDCM\x12\x17.inferserver.dcmRequest\x1a\x1a.inferserver.rotationReply\"\x00\x32T\n\x0eInferLungField\x12\x42\n\x08inferDCM\x12\x17.inferserver.dcmRequest\x1a\x1b.inferserver.lungFieldReply\"\x00\x32Q\n\x11InferPneumothorax\x12<\n\x08inferDCM\x12\x17.inferserver.dcmRequest\x1a\x15.inferserver.ptxReply\"\x00\x32P\n\x0cInferFreeAir\x12@\n\x08inferDCM\x12\x17.inferserver.dcmRequest\x1a\x19.inferserver.freeAirReply\"\x00\x32N\n\x0bInferCarina\x12?\n\x08inferDCM\x12\x17.inferserver.dcmRequest\x1a\x18.inferserver.carinaReply\"\x00\x32N\n\x0bInferETTube\x12?\n\x08inferDCM\x12\x17.inferserver.dcmRequest\x1a\x18.inferserver.ettubeReply\"\x00\x32T\n\x0eInferETTubeTip\x12\x42\n\x08inferDCM\x12\x17.inferserver.dcmRequest\x1a\x1b.inferserver.ettubeTipReply\"\x00\x62\x06proto3')
)

_ROTATIONRESULT = _descriptor.EnumDescriptor(
  name='RotationResult',
  full_name='inferserver.RotationResult',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UPRIGHT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCKWISE_270', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPSIDE_DOWN', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLOCKWISE_90', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=867,
  serialized_end=950,
)
_sym_db.RegisterEnumDescriptor(_ROTATIONRESULT)

RotationResult = enum_type_wrapper.EnumTypeWrapper(_ROTATIONRESULT)
_CHESTFRONTALRESULT = _descriptor.EnumDescriptor(
  name='ChestFrontalResult',
  full_name='inferserver.ChestFrontalResult',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FRONTAL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NON_FRONTAL', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=952,
  serialized_end=1002,
)
_sym_db.RegisterEnumDescriptor(_CHESTFRONTALRESULT)

ChestFrontalResult = enum_type_wrapper.EnumTypeWrapper(_CHESTFRONTALRESULT)
_LUNGFIELDRESULT = _descriptor.EnumDescriptor(
  name='LungFieldResult',
  full_name='inferserver.LungFieldResult',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LUNG_FIELDS_OK', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LUNG_FIELDS_CLIPPED', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1004,
  serialized_end=1066,
)
_sym_db.RegisterEnumDescriptor(_LUNGFIELDRESULT)

LungFieldResult = enum_type_wrapper.EnumTypeWrapper(_LUNGFIELDRESULT)
_PNEUMOTHORAXRESULT = _descriptor.EnumDescriptor(
  name='PneumothoraxResult',
  full_name='inferserver.PneumothoraxResult',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PNEUMOTHORAX_PRESENT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PNEUMOTHORAX_ABSENT', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1068,
  serialized_end=1139,
)
_sym_db.RegisterEnumDescriptor(_PNEUMOTHORAXRESULT)

PneumothoraxResult = enum_type_wrapper.EnumTypeWrapper(_PNEUMOTHORAXRESULT)
_FREEAIRRESULT = _descriptor.EnumDescriptor(
  name='FreeAirResult',
  full_name='inferserver.FreeAirResult',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FREEAIR_PRESENT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FREEAIR_ABSENT', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1141,
  serialized_end=1197,
)
_sym_db.RegisterEnumDescriptor(_FREEAIRRESULT)

FreeAirResult = enum_type_wrapper.EnumTypeWrapper(_FREEAIRRESULT)
_CARINARESULT = _descriptor.EnumDescriptor(
  name='CarinaResult',
  full_name='inferserver.CarinaResult',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CARINA_PRESENT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CARINA_ABSENT', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1199,
  serialized_end=1252,
)
_sym_db.RegisterEnumDescriptor(_CARINARESULT)

CarinaResult = enum_type_wrapper.EnumTypeWrapper(_CARINARESULT)
_ETTUBERESULT = _descriptor.EnumDescriptor(
  name='ETTubeResult',
  full_name='inferserver.ETTubeResult',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ETTUBE_PRESENT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ETTUBE_ABSENT', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1254,
  serialized_end=1307,
)
_sym_db.RegisterEnumDescriptor(_ETTUBERESULT)

ETTubeResult = enum_type_wrapper.EnumTypeWrapper(_ETTUBERESULT)
_ETTUBETIPRESULT = _descriptor.EnumDescriptor(
  name='ETTubeTipResult',
  full_name='inferserver.ETTubeTipResult',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ETTUBE_TIP_PRESENT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ETTUBE_TIP_ABSENT', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1309,
  serialized_end=1373,
)
_sym_db.RegisterEnumDescriptor(_ETTUBETIPRESULT)

ETTubeTipResult = enum_type_wrapper.EnumTypeWrapper(_ETTUBETIPRESULT)
UPRIGHT = 0
CLOCKWISE_270 = 1
UPSIDE_DOWN = 2
CLOCKWISE_90 = 3
FRONTAL = 0
NON_FRONTAL = 1
LUNG_FIELDS_OK = 0
LUNG_FIELDS_CLIPPED = 1
PNEUMOTHORAX_PRESENT = 0
PNEUMOTHORAX_ABSENT = 1
FREEAIR_PRESENT = 0
FREEAIR_ABSENT = 1
CARINA_PRESENT = 0
CARINA_ABSENT = 1
ETTUBE_PRESENT = 0
ETTUBE_ABSENT = 1
ETTUBE_TIP_PRESENT = 0
ETTUBE_TIP_ABSENT = 1



_DCMREQUEST = _descriptor.Descriptor(
  name='dcmRequest',
  full_name='inferserver.dcmRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dcmname', full_name='inferserver.dcmRequest.dcmname', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=63,
)


_ROTATIONREPLY = _descriptor.Descriptor(
  name='rotationReply',
  full_name='inferserver.rotationReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='inferserver.rotationReply.result', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidenceScore', full_name='inferserver.rotationReply.confidenceScore', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=65,
  serialized_end=150,
)


_CHESTFRONTALREPLY = _descriptor.Descriptor(
  name='chestFrontalReply',
  full_name='inferserver.chestFrontalReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='inferserver.chestFrontalReply.result', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidenceScore', full_name='inferserver.chestFrontalReply.confidenceScore', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=152,
  serialized_end=245,
)


_LUNGFIELDREPLY = _descriptor.Descriptor(
  name='lungFieldReply',
  full_name='inferserver.lungFieldReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='inferserver.lungFieldReply.result', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidenceScore', full_name='inferserver.lungFieldReply.confidenceScore', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=247,
  serialized_end=334,
)


_PTXREPLY = _descriptor.Descriptor(
  name='ptxReply',
  full_name='inferserver.ptxReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='inferserver.ptxReply.result', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidenceScore', full_name='inferserver.ptxReply.confidenceScore', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='heatmapPath', full_name='inferserver.ptxReply.heatmapPath', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=336,
  serialized_end=441,
)


_FREEAIRREPLY = _descriptor.Descriptor(
  name='freeAirReply',
  full_name='inferserver.freeAirReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='inferserver.freeAirReply.result', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidenceScore', full_name='inferserver.freeAirReply.confidenceScore', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='heatmapPath', full_name='inferserver.freeAirReply.heatmapPath', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=443,
  serialized_end=547,
)


_CARINAREPLY = _descriptor.Descriptor(
  name='carinaReply',
  full_name='inferserver.carinaReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='inferserver.carinaReply.result', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidenceScore', full_name='inferserver.carinaReply.confidenceScore', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='heatmapPath', full_name='inferserver.carinaReply.heatmapPath', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=549,
  serialized_end=651,
)


_ETTUBEREPLY = _descriptor.Descriptor(
  name='ettubeReply',
  full_name='inferserver.ettubeReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='inferserver.ettubeReply.result', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidenceScore', full_name='inferserver.ettubeReply.confidenceScore', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='heatmapPath', full_name='inferserver.ettubeReply.heatmapPath', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=653,
  serialized_end=755,
)


_ETTUBETIPREPLY = _descriptor.Descriptor(
  name='ettubeTipReply',
  full_name='inferserver.ettubeTipReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='inferserver.ettubeTipReply.result', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidenceScore', full_name='inferserver.ettubeTipReply.confidenceScore', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='heatmapPath', full_name='inferserver.ettubeTipReply.heatmapPath', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=757,
  serialized_end=865,
)

_ROTATIONREPLY.fields_by_name['result'].enum_type = _ROTATIONRESULT
_CHESTFRONTALREPLY.fields_by_name['result'].enum_type = _CHESTFRONTALRESULT
_LUNGFIELDREPLY.fields_by_name['result'].enum_type = _LUNGFIELDRESULT
_PTXREPLY.fields_by_name['result'].enum_type = _PNEUMOTHORAXRESULT
_FREEAIRREPLY.fields_by_name['result'].enum_type = _FREEAIRRESULT
_CARINAREPLY.fields_by_name['result'].enum_type = _CARINARESULT
_ETTUBEREPLY.fields_by_name['result'].enum_type = _ETTUBERESULT
_ETTUBETIPREPLY.fields_by_name['result'].enum_type = _ETTUBETIPRESULT
DESCRIPTOR.message_types_by_name['dcmRequest'] = _DCMREQUEST
DESCRIPTOR.message_types_by_name['rotationReply'] = _ROTATIONREPLY
DESCRIPTOR.message_types_by_name['chestFrontalReply'] = _CHESTFRONTALREPLY
DESCRIPTOR.message_types_by_name['lungFieldReply'] = _LUNGFIELDREPLY
DESCRIPTOR.message_types_by_name['ptxReply'] = _PTXREPLY
DESCRIPTOR.message_types_by_name['freeAirReply'] = _FREEAIRREPLY
DESCRIPTOR.message_types_by_name['carinaReply'] = _CARINAREPLY
DESCRIPTOR.message_types_by_name['ettubeReply'] = _ETTUBEREPLY
DESCRIPTOR.message_types_by_name['ettubeTipReply'] = _ETTUBETIPREPLY
DESCRIPTOR.enum_types_by_name['RotationResult'] = _ROTATIONRESULT
DESCRIPTOR.enum_types_by_name['ChestFrontalResult'] = _CHESTFRONTALRESULT
DESCRIPTOR.enum_types_by_name['LungFieldResult'] = _LUNGFIELDRESULT
DESCRIPTOR.enum_types_by_name['PneumothoraxResult'] = _PNEUMOTHORAXRESULT
DESCRIPTOR.enum_types_by_name['FreeAirResult'] = _FREEAIRRESULT
DESCRIPTOR.enum_types_by_name['CarinaResult'] = _CARINARESULT
DESCRIPTOR.enum_types_by_name['ETTubeResult'] = _ETTUBERESULT
DESCRIPTOR.enum_types_by_name['ETTubeTipResult'] = _ETTUBETIPRESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

dcmRequest = _reflection.GeneratedProtocolMessageType('dcmRequest', (_message.Message,), dict(
  DESCRIPTOR = _DCMREQUEST,
  __module__ = 'inferserver_pb2'
  # @@protoc_insertion_point(class_scope:inferserver.dcmRequest)
  ))
_sym_db.RegisterMessage(dcmRequest)

rotationReply = _reflection.GeneratedProtocolMessageType('rotationReply', (_message.Message,), dict(
  DESCRIPTOR = _ROTATIONREPLY,
  __module__ = 'inferserver_pb2'
  # @@protoc_insertion_point(class_scope:inferserver.rotationReply)
  ))
_sym_db.RegisterMessage(rotationReply)

chestFrontalReply = _reflection.GeneratedProtocolMessageType('chestFrontalReply', (_message.Message,), dict(
  DESCRIPTOR = _CHESTFRONTALREPLY,
  __module__ = 'inferserver_pb2'
  # @@protoc_insertion_point(class_scope:inferserver.chestFrontalReply)
  ))
_sym_db.RegisterMessage(chestFrontalReply)

lungFieldReply = _reflection.GeneratedProtocolMessageType('lungFieldReply', (_message.Message,), dict(
  DESCRIPTOR = _LUNGFIELDREPLY,
  __module__ = 'inferserver_pb2'
  # @@protoc_insertion_point(class_scope:inferserver.lungFieldReply)
  ))
_sym_db.RegisterMessage(lungFieldReply)

ptxReply = _reflection.GeneratedProtocolMessageType('ptxReply', (_message.Message,), dict(
  DESCRIPTOR = _PTXREPLY,
  __module__ = 'inferserver_pb2'
  # @@protoc_insertion_point(class_scope:inferserver.ptxReply)
  ))
_sym_db.RegisterMessage(ptxReply)

freeAirReply = _reflection.GeneratedProtocolMessageType('freeAirReply', (_message.Message,), dict(
  DESCRIPTOR = _FREEAIRREPLY,
  __module__ = 'inferserver_pb2'
  # @@protoc_insertion_point(class_scope:inferserver.freeAirReply)
  ))
_sym_db.RegisterMessage(freeAirReply)

carinaReply = _reflection.GeneratedProtocolMessageType('carinaReply', (_message.Message,), dict(
  DESCRIPTOR = _CARINAREPLY,
  __module__ = 'inferserver_pb2'
  # @@protoc_insertion_point(class_scope:inferserver.carinaReply)
  ))
_sym_db.RegisterMessage(carinaReply)

ettubeReply = _reflection.GeneratedProtocolMessageType('ettubeReply', (_message.Message,), dict(
  DESCRIPTOR = _ETTUBEREPLY,
  __module__ = 'inferserver_pb2'
  # @@protoc_insertion_point(class_scope:inferserver.ettubeReply)
  ))
_sym_db.RegisterMessage(ettubeReply)

ettubeTipReply = _reflection.GeneratedProtocolMessageType('ettubeTipReply', (_message.Message,), dict(
  DESCRIPTOR = _ETTUBETIPREPLY,
  __module__ = 'inferserver_pb2'
  # @@protoc_insertion_point(class_scope:inferserver.ettubeTipReply)
  ))
_sym_db.RegisterMessage(ettubeTipReply)



_INFERCHESTFRONTAL = _descriptor.ServiceDescriptor(
  name='InferChestFrontal',
  full_name='inferserver.InferChestFrontal',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=1375,
  serialized_end=1465,
  methods=[
  _descriptor.MethodDescriptor(
    name='inferDCM',
    full_name='inferserver.InferChestFrontal.inferDCM',
    index=0,
    containing_service=None,
    input_type=_DCMREQUEST,
    output_type=_CHESTFRONTALREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INFERCHESTFRONTAL)

DESCRIPTOR.services_by_name['InferChestFrontal'] = _INFERCHESTFRONTAL


_INFERROTATION = _descriptor.ServiceDescriptor(
  name='InferRotation',
  full_name='inferserver.InferRotation',
  file=DESCRIPTOR,
  index=1,
  options=None,
  serialized_start=1467,
  serialized_end=1549,
  methods=[
  _descriptor.MethodDescriptor(
    name='inferDCM',
    full_name='inferserver.InferRotation.inferDCM',
    index=0,
    containing_service=None,
    input_type=_DCMREQUEST,
    output_type=_ROTATIONREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INFERROTATION)

DESCRIPTOR.services_by_name['InferRotation'] = _INFERROTATION


_INFERLUNGFIELD = _descriptor.ServiceDescriptor(
  name='InferLungField',
  full_name='inferserver.InferLungField',
  file=DESCRIPTOR,
  index=2,
  options=None,
  serialized_start=1551,
  serialized_end=1635,
  methods=[
  _descriptor.MethodDescriptor(
    name='inferDCM',
    full_name='inferserver.InferLungField.inferDCM',
    index=0,
    containing_service=None,
    input_type=_DCMREQUEST,
    output_type=_LUNGFIELDREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INFERLUNGFIELD)

DESCRIPTOR.services_by_name['InferLungField'] = _INFERLUNGFIELD


_INFERPNEUMOTHORAX = _descriptor.ServiceDescriptor(
  name='InferPneumothorax',
  full_name='inferserver.InferPneumothorax',
  file=DESCRIPTOR,
  index=3,
  options=None,
  serialized_start=1637,
  serialized_end=1718,
  methods=[
  _descriptor.MethodDescriptor(
    name='inferDCM',
    full_name='inferserver.InferPneumothorax.inferDCM',
    index=0,
    containing_service=None,
    input_type=_DCMREQUEST,
    output_type=_PTXREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INFERPNEUMOTHORAX)

DESCRIPTOR.services_by_name['InferPneumothorax'] = _INFERPNEUMOTHORAX


_INFERFREEAIR = _descriptor.ServiceDescriptor(
  name='InferFreeAir',
  full_name='inferserver.InferFreeAir',
  file=DESCRIPTOR,
  index=4,
  options=None,
  serialized_start=1720,
  serialized_end=1800,
  methods=[
  _descriptor.MethodDescriptor(
    name='inferDCM',
    full_name='inferserver.InferFreeAir.inferDCM',
    index=0,
    containing_service=None,
    input_type=_DCMREQUEST,
    output_type=_FREEAIRREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INFERFREEAIR)

DESCRIPTOR.services_by_name['InferFreeAir'] = _INFERFREEAIR


_INFERCARINA = _descriptor.ServiceDescriptor(
  name='InferCarina',
  full_name='inferserver.InferCarina',
  file=DESCRIPTOR,
  index=5,
  options=None,
  serialized_start=1802,
  serialized_end=1880,
  methods=[
  _descriptor.MethodDescriptor(
    name='inferDCM',
    full_name='inferserver.InferCarina.inferDCM',
    index=0,
    containing_service=None,
    input_type=_DCMREQUEST,
    output_type=_CARINAREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INFERCARINA)

DESCRIPTOR.services_by_name['InferCarina'] = _INFERCARINA


_INFERETTUBE = _descriptor.ServiceDescriptor(
  name='InferETTube',
  full_name='inferserver.InferETTube',
  file=DESCRIPTOR,
  index=6,
  options=None,
  serialized_start=1882,
  serialized_end=1960,
  methods=[
  _descriptor.MethodDescriptor(
    name='inferDCM',
    full_name='inferserver.InferETTube.inferDCM',
    index=0,
    containing_service=None,
    input_type=_DCMREQUEST,
    output_type=_ETTUBEREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INFERETTUBE)

DESCRIPTOR.services_by_name['InferETTube'] = _INFERETTUBE


_INFERETTUBETIP = _descriptor.ServiceDescriptor(
  name='InferETTubeTip',
  full_name='inferserver.InferETTubeTip',
  file=DESCRIPTOR,
  index=7,
  options=None,
  serialized_start=1962,
  serialized_end=2046,
  methods=[
  _descriptor.MethodDescriptor(
    name='inferDCM',
    full_name='inferserver.InferETTubeTip.inferDCM',
    index=0,
    containing_service=None,
    input_type=_DCMREQUEST,
    output_type=_ETTUBETIPREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INFERETTUBETIP)

DESCRIPTOR.services_by_name['InferETTubeTip'] = _INFERETTUBETIP

# @@protoc_insertion_point(module_scope)
